{
  "sidebarComponentAutomation": {
    "createAutomationWorkflow": "New workflow"
  },
  "createAutomationWorkflowModal": {
    "header": "Create workflow",
    "submit": "Add workflow"
  },
  "automationWorkflowForm": {
    "defaultName": "Workflow",
    "nameTitle": "Name",
    "nameSubtitle": "Unique name of the workflow",
    "namePlaceholder": "Enter a name..."
  },
  "duplicateAutomationWorkflowJobType": {
    "name": "Duplicate automation workflow",
    "duplicating": "Duplicating",
    "duplicatedTitle": "Workflow duplicated"
  },
  "automationWorkflowErrors": {
    "errorNameNotUnique": "A workflow with this name already exists"
  },
  "trashType": {
    "workflow": "workflow"
  },
  "generalSettings": {
    "titleOverview": "General",
    "nameLabel": "Automation name",
    "notificationLabel": "Notifications",
    "notificationCheckboxLabel": "Get notified when this automation fails",
    "cantUpdateAutomationTitle": "Couldn't Update Automation",
    "cantUpdateAutomationDescription": "Sorry, could not update the automation."
  },
  "integrationSettings": {
    "title": "Integrations",
    "noIntegrationMessage": "You have not yet created any integrations. They can be created by adding data source, action or user authentication.",
    "integrationMessage": "You can create new integrations by adding data source, action or user authentication."
  },
  "automationHeader": {
    "startTestRun": "Start test run",
    "stopTestRun": "Stop test run",
    "publishBtn": "Publish",
    "settingsBtn": "Settings",
    "historyBtn": "History",
    "switchLabelDraft": "Draft",
    "switchLabelDisabled": "Disabled",
    "switchLabelPaused": "Paused",
    "switchLabelLive": "Live",
    "lastPublished": "Last published"
  },
  "dataProviderType": {
    "previousNode": "Previous node"
  },
  "emptyHistorySidePanelState": {
    "title": "No runs yet",
    "description": "When this automation has run, the results will be shown here."
  },
  "nodeType": {
    "localBaserowRowsCreatedLabel": "Rows are created in {tableName}",
    "localBaserowRowsUpdatedLabel": "Rows are updated in {tableName}",
    "localBaserowRowsDeletedLabel": "Rows are deleted in {tableName}",
    "localBaserowCreateRowLabel": "Create a row in {tableName}",
    "localBaserowUpdateRowLabel": "Update a row in {tableName}",
    "localBaserowDeleteRowLabel": "Delete a row in {tableName}",
    "localBaserowGetRowLabel": "Read a row in {tableName}",
    "localBaserowListRowsLabel": "List rows in {tableName}",
    "localBaserowAggregateRowsLabel": "Summarize rows in {tableName}",
    "httpRequestLabel": "Send an HTTP request",
    "smtpEmailLabel": "Send an email"
  },
  "workflowNode": {
    "actionDelete": "Delete",
    "actionReplace": "Replace",
    "actionDuplicate": "Duplicate",
    "actionConfigure": "Configure",
    "beforeLabelTrigger": "Starts when",
    "beforeLabelAction": "Then",
    "moreEdit": "Edit",
    "moreReplace": "Replace"
  },
  "workflowNodeContext": {
    "searchPlaceholderTrigger": "Search for a trigger...",
    "searchPlaceholderActions": "Search for actions...",
    "noResults": "No results found"
  },
  "visualBuilder": {
    "nodeLibrary": "Node Library",
    "searchNodes": "Search nodes...",
    "configureNode": "Configure Node",
    "testWorkflow": "Test Workflow",
    "runTest": "Run Test",
    "debug": "Debug",
    "executionLogs": "Execution Logs",
    "refresh": "Refresh",
    "allLogs": "All Logs",
    "successOnly": "Success Only",
    "errorsOnly": "Errors Only",
    "viewData": "View Data",
    "testResults": "Test Results",
    "trigger": "Trigger",
    "action": "Action",
    "logic": "Logic",
    "timing": "Timing",
    "configure": "Configure",
    "delete": "Delete",
    "notConfigured": "Not configured",
    "error": "Error",
    "configured": "Configured",
    "needsConfig": "Needs configuration",
    "true": "True",
    "false": "False",
    "conditionalBranch": "Conditional Branch",
    "delay": "Delay",
    "delayType": "Delay Type",
    "duration": "Duration",
    "until": "Until",
    "condition": "Condition",
    "maxWait": "Max Wait",
    "fixedDuration": "Fixed Duration",
    "untilDate": "Until Date",
    "untilCondition": "Until Condition",
    "ifTrue": "If True",
    "ifFalse": "If False",
    "iftttBuilder": "If This, Then That Builder",
    "iftttDescription": "Create simple automation rules using natural language",
    "if": "If",
    "then": "Then",
    "chooseTrigger": "Choose a trigger",
    "addAction": "Add an action",
    "rulePreview": "Rule Preview",
    "somethingHappens": "something happens",
    "doSomething": "do something",
    "saveRule": "Save Rule",
    "testRule": "Test Rule",
    "reset": "Reset",
    "selectTrigger": "Select Trigger",
    "selectAction": "Select Action",
    "ruleSaved": "Rule saved successfully",
    "ruleSaveFailed": "Failed to save rule",
    "ruleTestSuccess": "Rule test completed successfully",
    "ruleTestFailed": "Failed to test rule",
    "allTriggers": "All Triggers",
    "database": "Database",
    "time": "Time",
    "external": "External",
    "user": "User",
    "dateBasedTrigger": "Date-Based Trigger",
    "dateBasedTriggerDesc": "Trigger when a date field reaches a specific condition",
    "webhookTrigger": "Webhook Trigger",
    "webhookTriggerDesc": "Trigger when an external webhook is received",
    "linkedRecordChangeTrigger": "Linked Record Change",
    "linkedRecordChangeTriggerDesc": "Trigger when linked records are modified",
    "conditionalTrigger": "Conditional Trigger",
    "conditionalTriggerDesc": "Trigger based on complex conditions",
    "popular": "Popular",
    "noTriggersFound": "No triggers found",
    "tryDifferentSearch": "Try a different search term",
    "allActions": "All Actions",
    "notifications": "Notifications",
    "integrations": "Integrations",
    "utilities": "Utilities",
    "sendNotification": "Send Notification",
    "sendNotificationDesc": "Send notifications via email, Slack, or other channels",
    "sendWebhook": "Send Webhook",
    "sendWebhookDesc": "Send HTTP requests to external services",
    "changeStatus": "Change Status",
    "changeStatusDesc": "Update field values based on conditions",
    "conditionalBranchDesc": "Create branching logic in your workflow",
    "delayDesc": "Add delays or wait for conditions",
    "new": "New",
    "noActionsFound": "No actions found",
    "searchTriggers": "Search triggers...",
    "searchActions": "Search actions...",
    "triggers": "Triggers",
    "actions": "Actions"
  }
}
